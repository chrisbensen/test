name: Audit licenses
on:
  # pull_request:
  #   branches: [ "**/*" ]
  pull_request_target:

jobs:
  run_scancode_toolkit:
    name: Get inventory of licenses used in project
    runs-on: ubuntu-latest
    container:
      image: txl8578/scancode-toolkit
      # image: ghcr.io/oracledevrel/scancode-toolkit:v21.3.31
      # credentials:
      #   username: ${{ github.actor }}
      #   password: ${{ secrets.GITHUB_TOKEN }}
      # volumes:
        # - ${{ $GITHUB_WORKSPACE }}:/github/workspace
        # - /__w/test/test:/project
      # volumes:
      #   - /__w/test/test:/project
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
        # with:
        #   persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        #   fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
      - name: Run Scancode-toolkit
        # uses: addnab/docker-run-action@v3
        # with:
        #   registry: ghcr.io/oracledevrel
        #   image: scancode-toolkit:v21.3.31
        #   # options:
        #   run: |
        #     scancode -clpeui --ignore licenses.json --json-pp /github/workspace/licenses.json /github/workspace/
        # run: scancode -clpeui --ignore licenses.json --json-pp /project/licenses.json /project/
        # scancode -l --ignore licenses.json --ignore ".github/**/*" --ignore "license_policy.yml" --license-policy /__w/test/test/license_policy.yml --only-findings --summary --json-pp /__w/test/test/licenses.json /__w/test/test/
        # scancode -l --ignore licenses.json --ignore ".github/**/*" --ignore "license_policy.yml" --license-policy /github/workspace/license_policy.yml --only-findings --summary --json-pp /github/workspace/licenses.json /github/workspace
        # scancode -l --ignore licenses.json --ignore .github/**/* --ignore "license_policy.yml" --license-policy /__w/test/test/license_policy.yml --only-findings --summary --json-pp /__w/test/test/licenses.json /__w/test/test/
        run: |
          cd /__w/test/test/
          scancode -l --ignore licenses.json --ignore .github/**/* --ignore license_policy.yml --license-policy license_policy.yml --only-findings --summary --json-pp licenses.json .
          echo "\n\nHere is the licenses.json:\n"
          echo $(cat licenses.json)
      - name: Look for non-approved licenses
        uses: ./.github/actions/license_audit
        id: analysis
        with:
          licenses_file: '/github/workspace/licenses.json'
      - name: Analysis results (good)
        if: steps.analysis.outputs.unapproved_licenses == "false"
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            **License Inspection**
            Congraulations!  All licenses appear to be approved for use.
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Analysis results (bad)
        if: steps.analysis.outputs.unapproved_licenses == "true"
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            **License Inspection**
            Requires manual inspection.  There are some licenses which dictate further analysis and review.
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Halt pipeline on unapproved licenses
        if: steps.analysis.outputs.unapproved_licenses == "true"
        run: exit 1